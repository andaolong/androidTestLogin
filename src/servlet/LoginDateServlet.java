package servlet;


import java.io.IOException;
import java.sql.ResultSet;
import java.sql.SQLException;


import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;


import com.google.gson.Gson;
import db.DBUtils;
import domain.MessageBean;
import domain.UserBean;


public class LoginDateServlet extends HttpServlet {

	/**
	 * 2020年6月6日07:20:13
	 * 这个类是刚开始学习的时候参照别人的教程写的
	 * 这个类在实际工程中不起实际作用
	 * 可以给刚学习的小伙伴一点启发，我的其他的类都是参照着这个写的*/
	
	@Override
	protected void doGet(HttpServletRequest request, HttpServletResponse response) 
			throws ServletException, IOException {
		doPost(request, response);
	}
	
	@Override
	protected void doPost(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		
		System.out.println("request--->"+request.getRequestURL()+"===="+request.getParameterMap().toString());
		
		String username = request.getParameter("username"); // 获取客户端传过来的参数
		String password = request.getParameter("password");
		response.setContentType("text/html;charset=utf-8");
		if (username == null || username.equals("") || password == null || password.equals("")) {
			System.out.println("用户名或密码为空");
			return;
		}
		
		// 请求数据库
		DBUtils dbUtils = new DBUtils();
		dbUtils.openConnect();
		// 打开数据库连接
		MessageBean data = new MessageBean(); // 基类对象，回传给客户端的json对象，包含code，message，data，其中data为json对象，包含id，name，password
		UserBean userBean = new UserBean(); // user的对象，后台数据库的对象，包含id，user_name,user_password
		if (dbUtils.isExistInDB(username, password)) {
			// 判断账号是否存在，存在的话提示“账户已经存在”
			data.setCode(-1);
			data.setData(userBean);
			data.setMsg("该账号已存在");
		} else if (!dbUtils.insertDataToDB(username, password)) {
			// 注册成功,--andl:本次注册的用户名还没有注册过，可以注册当前账号
			data.setCode(0);
			data.setMsg("注册成功!!");
			//这里rs是从user表里面查询出的所有数据
			ResultSet rs = dbUtils.getUser();
			int id = -1;	
			
			//andl:这里是获得刚刚注册好的用户的userID，然后将ID更新到userBean然后交由data传回去
			if (rs != null) {
				try {
					while (rs.next()) {
						if (rs.getString("user_name").equals(username) 
								&& rs.getString("user_password").equals(password)) {
							id = rs.getInt("user_id");
						}
					}
					userBean.setId(id);
				} catch (SQLException e) {
					e.printStackTrace();
				}
			}
			userBean.setUsername(username);
			userBean.setPassword(password);
			data.setData(userBean);
			
		} else {
			// 注册不成功，这里错误没有细分，都归为数据库错误
			data.setCode(500);
			data.setData(userBean);
			data.setMsg("数据库错误");
		}
		Gson gson = new Gson();
		String json = gson.toJson(data);
		// 将对象转化成json字符串
		try {
			response.getWriter().println(json);
			// 将json数据传给客户端
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			response.getWriter().close(); // 关闭这个流，不然会发生错误的
		}
		// 关闭数据库连接
		dbUtils.closeConnect(); 
	}
	

}
